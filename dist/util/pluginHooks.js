"use strict";
exports.__esModule = true;
exports.compilationHooks = exports.asyncHooks = exports.compilerHooks = void 0;
var compilerHooks = [
    'entryOption',
    'afterPlugins',
    'afterResolvers',
    'environment',
    'afterEnvironment',
    'beforeRun',
    'run',
    'watchRun',
    'normalModuleFactory',
    'contextModuleFactory',
    'beforeCompile',
    'compile',
    'thisCompilation',
    'compilation',
    'make',
    'afterCompile',
    'shouldEmit',
    'needAdditionalPass',
    'emit',
    'afterEmit',
    'done',
];
exports.compilerHooks = compilerHooks;
var asyncHooks = [
    'beforeRun',
    'run',
    'watchRun',
    'beforeCompile',
    'afterCompile',
    'emit',
    'afterEmit',
    'done',
    'optimizeTree',
    'additionalAssets',
    'optimizeChunkAssets',
    'optimizeAssets',
    'afterSeal',
];
exports.asyncHooks = asyncHooks;
var compilationHooks = [
    'buildModule',
    'rebuildModule',
    'failedModule',
    'succeedModule',
    'finishModules',
    'finishRebuildingModule',
    'seal',
    'unseal',
    'optimizeDependenciesBasic',
    'optimizeDependencies',
    'optimizeDependenciesAdvanced',
    'afterOptimizeDependencies',
    'optimize',
    'optimizeModulesBasic',
    'optimizeModules',
    'optimizeModulesAdvanced',
    'afterOptimizeModules',
    'optimizeChunksBasic',
    'optimizeChunks',
    'optimizeChunksAdvanced',
    'afterOptimizeChunks',
    'optimizeTree',
    'afterOptimizeTree',
    'optimizeChunkModulesBasic',
    'optimizeChunkModules',
    'optimizeChunkModulesAdvanced',
    'afterOptimizeChunkModules',
    'shouldRecord',
    'reviveModules',
    'optimizeModuleOrder',
    'advancedOptimizeModuleOrder',
    'beforeModuleIds',
    'moduleIds',
    'optimizeModuleIds',
    'afterOptimizeModuleIds',
    'reviveChunks',
    'optimizeChunkOrder',
    'beforeOptimizeChunkIds',
    'optimizeChunkIds',
    'afterOptimizeChunkIds',
    'recordModules',
    'recordChunks',
    'beforeHash',
    'afterHash',
    'recordHash',
    'record',
    'beforeModuleAssets',
    'shouldGenerateChunkAssets',
    'beforeChunkAssets',
    'additionalChunkAssets',
    'records',
    'additionalAssets',
    'optimizeChunkAssets',
    'afterOptimizeChunkAssets',
    'optimizeAssets',
    'afterOptimizeAssets',
    'needAdditionalSeal',
    'afterSeal',
    'chunkHash',
    'moduleAsset',
    'chunkAsset',
    'assetPath',
    'needAdditionalPass',
    'childCompiler',
    'normalModuleLoader',
];
exports.compilationHooks = compilationHooks;
